// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using buildingBlocksCore.Data.PersistData.Context;

#nullable disable

namespace buildingBlocksCore.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231229141255_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("buildingBlocksCore.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateRegister");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateUpdate");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeleteDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Nome");

                    b.Property<Guid?>("UserDeletedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserDeletedId");

                    b.Property<Guid>("UserInsertedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserInsertedId");

                    b.Property<Guid?>("UserUpdatedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserUpdatedId");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("buildingBlocksCore.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Bairro");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClienteId");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateRegister");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateUpdate");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeleteDate");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("Estado");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FornecedorId");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Logradouro");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Numero");

                    b.Property<int>("TipoEndereco")
                        .HasColumnType("int")
                        .HasColumnName("TipoEndereco");

                    b.Property<Guid?>("UserDeletedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserDeletedId");

                    b.Property<Guid>("UserInsertedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserInsertedId");

                    b.Property<Guid?>("UserUpdatedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserUpdatedId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("buildingBlocksCore.Models.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("CNPJ");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateRegister");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateUpdate");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeleteDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Email");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("RazaoSocial");

                    b.Property<Guid?>("UserDeletedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserDeletedId");

                    b.Property<Guid>("UserInsertedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserInsertedId");

                    b.Property<Guid?>("UserUpdatedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserUpdatedId");

                    b.HasKey("Id");

                    b.ToTable("Fornecedor", (string)null);
                });

            modelBuilder.Entity("buildingBlocksCore.Models.Nota", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateRegister");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateUpdate");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeleteDate");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Numero");

                    b.Property<string>("Observacao")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Observacao");

                    b.Property<Guid?>("UserDeletedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserDeletedId");

                    b.Property<Guid>("UserInsertedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserInsertedId");

                    b.Property<Guid?>("UserUpdatedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserUpdatedId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Nota", (string)null);
                });

            modelBuilder.Entity("buildingBlocksCore.Models.NotaItens", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateRegister");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateUpdate");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeleteDate");

                    b.Property<Guid>("NotaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("ValorUnitario");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Qtd")
                        .HasColumnType("int")
                        .HasColumnName("Qtd");

                    b.Property<Guid?>("UserDeletedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserDeletedId");

                    b.Property<Guid>("UserInsertedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserInsertedId");

                    b.Property<Guid?>("UserUpdatedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserUpdatedId");

                    b.HasKey("Id");

                    b.HasIndex("NotaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("NotaItens", (string)null);
                });

            modelBuilder.Entity("buildingBlocksCore.Models.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateRegister");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateUpdate");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeleteDate");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacao")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Observacao");

                    b.Property<Guid?>("UserDeletedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserDeletedId");

                    b.Property<Guid>("UserInsertedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserInsertedId");

                    b.Property<Guid?>("UserUpdatedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserUpdatedId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Pedido", (string)null);
                });

            modelBuilder.Entity("buildingBlocksCore.Models.PedidoItens", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateRegister");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateUpdate");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeleteDate");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("ValorUnitario");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Qtd")
                        .HasColumnType("int")
                        .HasColumnName("Qtd");

                    b.Property<Guid?>("UserDeletedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserDeletedId");

                    b.Property<Guid>("UserInsertedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserInsertedId");

                    b.Property<Guid?>("UserUpdatedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserUpdatedId");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("PedidoItens", (string)null);
                });

            modelBuilder.Entity("buildingBlocksCore.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateRegister");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateUpdate");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeleteDate");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UserDeletedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserDeletedId");

                    b.Property<Guid>("UserInsertedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserInsertedId");

                    b.Property<Guid?>("UserUpdatedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserUpdatedId");

                    b.HasKey("Id");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("buildingBlocksCore.Models.Endereco", b =>
                {
                    b.HasOne("buildingBlocksCore.Models.Cliente", "Cliente")
                        .WithMany("Enderecos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("buildingBlocksCore.Models.Fornecedor", "Fornecedor")
                        .WithMany("Enderecos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("buildingBlocksCore.Models.Nota", b =>
                {
                    b.HasOne("buildingBlocksCore.Models.Cliente", "Cliente")
                        .WithMany("Notas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("buildingBlocksCore.Models.Fornecedor", "Fornecedor")
                        .WithMany("Notas")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("buildingBlocksCore.Models.NotaItens", b =>
                {
                    b.HasOne("buildingBlocksCore.Models.Nota", "Nota")
                        .WithMany("NotaItens")
                        .HasForeignKey("NotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("buildingBlocksCore.Models.Produto", "Produto")
                        .WithMany("NotaItens")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nota");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("buildingBlocksCore.Models.Pedido", b =>
                {
                    b.HasOne("buildingBlocksCore.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("buildingBlocksCore.Models.Fornecedor", "Fornecedor")
                        .WithMany("Pedidos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("buildingBlocksCore.Models.PedidoItens", b =>
                {
                    b.HasOne("buildingBlocksCore.Models.Pedido", "Pedido")
                        .WithMany("PedidoItens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("buildingBlocksCore.Models.Produto", "Produto")
                        .WithMany("PedidoItens")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("buildingBlocksCore.Models.Cliente", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Notas");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("buildingBlocksCore.Models.Fornecedor", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Notas");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("buildingBlocksCore.Models.Nota", b =>
                {
                    b.Navigation("NotaItens");
                });

            modelBuilder.Entity("buildingBlocksCore.Models.Pedido", b =>
                {
                    b.Navigation("PedidoItens");
                });

            modelBuilder.Entity("buildingBlocksCore.Models.Produto", b =>
                {
                    b.Navigation("NotaItens");

                    b.Navigation("PedidoItens");
                });
#pragma warning restore 612, 618
        }
    }
}
